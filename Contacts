public with sharing class Contacts {
    public static List<Contact> createMembers(String firstName, String lastName) {
        List<Contact> members = new List<Contact>();
        List<String> accNames = new List<String>(getFamilies(lastName));
        List<Account> accs = [SELECT Id FROM Account WHERE Name IN :accNames];
        for (Account acc : accs) {
            Contact member = new Contact(FirstName = firstName, LastName = lastName, AccountId = acc.Id); 
            members.add(member);
        }
        return members;
    }
    
    public static List<String> getFamilies(String lastName) {
        List<String> families = new List<String>();
        List<String> lastNames = lastName.split(' ');
        Integer lastNamesQuantity = lastNames.size();
        
        for (Integer i = 0; i < lastNamesQuantity; i++) {
            families.addAll(buildLastNames(lastNames, lastNamesQuantity, i));
        }
        
        return families;
    }
    
    private static List<String> buildLastNames(List<String> lastNames, Integer lastNamesQuantity, Integer startingIndex) {
        List<String> lastNameTemp = new List<String>();
        String currentLastName = '';
        for (Integer j = startingIndex; j < lastNamesQuantity; j++) {
            if (j > startingIndex) {
                currentLastName += ' ';
            }
            currentLastName += lastNames[j];
            lastNameTemp.add(currentLastName);
        }
        return lastNameTemp;
    }
    
    public static List<Contact> createMembers2(String firstName, String lastName) { 
        List<Contact> members = new List<Contact>();
        List<String> accNames = new List<String>(getFamilies(lastName));
        List<Account> accs = [SELECT Id FROM Account WHERE Name IN :accNames];
        List<Account> accsMissing = new List<Account>();
        if (accs.isEmpty()) {
            for (String n : accNames) {
                Account missing = new Account(Name = n);
                accsMissing.add(missing);
            }
            insert accsMissing;
        } else if (accs.size() != accNames.size()) {
            for (String n : accNames) {
                Account missing = new Account(Name = n);
                if (!accs.contains(missing)) {
                    accsMissing.add(missing);
                }
            }
            insert accsMissing;
        }
        for (Account acc : accs) {
            Contact member = new Contact(FirstName = firstName, LastName = lastName, AccountId = acc.Id); 
            members.add(member);
        }
        return members;
    }
}
